version: "3.8"

services:
  opensearch:
    image: opensearchproject/opensearch:2.13.0
    container_name: opensearch
    environment:
      - cluster.name=opensearch-local
      - node.name=opensearch-1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Kcb2025opSLabAi9
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost:9200"]
      interval: 15s
      timeout: 10s
      retries: 15
    networks:
      - opensearch-net

  dashboards:
    image: opensearchproject/opensearch-dashboards:2.13.0
    container_name: opensearch-dashboards
    depends_on:
      opensearch:
        condition: service_healthy
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
      OPENSEARCH_SSL_VERIFICATIONMODE: "none"
      SERVER_HOST: "0.0.0.0"
      SERVER_PUBLICBASEURL: "http://opensearch.local"
      OPENSEARCH_USERNAME: "admin"
      OPENSEARCH_PASSWORD: "Kcb2025opSLabAi9"
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:5601/login"]
      interval: 15s
      timeout: 10s
      retries: 15
    networks:
      - opensearch-net

  nginx:
    image: nginx:1.27
    container_name: opensearch-nginx
    depends_on:
      - dashboards
      - opensearch
    ports:
      - "80:80"
    volumes:
      - ./nginx/opensearch.conf:/etc/nginx/conf.d/opensearch.conf:ro
    networks:
      - opensearch-net

  postgres:
    image: postgres:15
    container_name: test-postgres
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass123
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./test-data/postgres:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - opensearch-net

  mysql:
    image: mysql:8.0
    container_name: test-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass123
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass123
    volumes:
      - mysql-data:/var/lib/mysql
      - ./test-data/mysql:/docker-entrypoint-initdb.d:ro
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - opensearch-net

  mongodb:
    image: mongo:6.0
    container_name: test-mongodb
    environment:
      MONGO_INITDB_DATABASE: opensearch_test
    volumes:
      - mongodb-data:/data/db
      - ./test-data/mongodb:/docker-entrypoint-initdb.d:ro
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - opensearch-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: opensearch-logstash
    depends_on:
      opensearch:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logstash/data:/usr/share/logstash/data
    ports:
      - "5000:5000"
      - "8080:8080"
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - opensearch-net

volumes:
  opensearch-data:
  postgres-data:
  mysql-data:
  mongodb-data:

networks:
  opensearch-net:
    driver: bridge

